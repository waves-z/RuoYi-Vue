<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.bbs.mapper.BbsCommentMapper">
    
    <resultMap type="BbsComment" id="BbsCommentResult">
        <result property="commentId" column="comment_id"/>
        <result property="postId" column="post_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="content" column="content"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="likeCount" column="like_count"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <sql id="selectBbsCommentVo">
        select c.comment_id, c.post_id, c.parent_id, c.content, c.user_id, u.nick_name as user_name, 
        c.like_count, c.create_by, c.create_time, c.update_by, c.update_time, c.status
        from bbs_comment c
        left join sys_user u on c.user_id = u.user_id
    </sql>

    <select id="selectBbsCommentList" parameterType="BbsComment" resultMap="BbsCommentResult">
        <include refid="selectBbsCommentVo"/>
        <where>
            <if test="postId != null "> and c.post_id = #{postId}</if>
            <if test="parentId != null "> and c.parent_id = #{parentId}</if>
            <if test="userId != null "> and c.user_id = #{userId}</if>
            <if test="status != null "> and c.status = #{status}</if>
        </where>
        order by c.create_time desc
    </select>
    
    <select id="selectBbsCommentById" parameterType="Long" resultMap="BbsCommentResult">
        <include refid="selectBbsCommentVo"/>
        where c.comment_id = #{commentId}
    </select>
        
    <insert id="insertBbsComment" parameterType="BbsComment" useGeneratedKeys="true" keyProperty="commentId">
        insert into bbs_comment (
            post_id,
            content,
            user_id,
            status,
            create_by,
            create_time
        ) values (
            #{postId},
            #{content},
            #{userId},
            '1',
            #{createBy},
            #{createTime}
        )
    </insert>

    <update id="updateBbsComment" parameterType="BbsComment">
        update bbs_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="postId != null">post_id = #{postId},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="content != null">content = #{content},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="likeCount != null">like_count = #{likeCount},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="status != null">status = #{status},</if>
        </trim>
        where comment_id = #{commentId}
    </update>

    <delete id="deleteBbsCommentById" parameterType="Long">
        delete from bbs_comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteBbsCommentByIds" parameterType="String">
        delete from bbs_comment where comment_id in 
        <foreach item="commentId" collection="array" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </delete>

    <update id="updateCommentStatus">
        update bbs_comment set status = #{arg1}, update_by = #{arg2}, update_time = sysdate()
        where comment_id = #{arg0}
    </update>
</mapper> 